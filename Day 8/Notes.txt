Scope

Variables scopes can be:
Global
Local

Global Scope
Anything declared without let, var, or const is scoped at global level.
A globally declared variable can be access everywhere in the same file, but the term global is relative. It can be global to the file OR it can be global relative to some block of code. 

Local Scope
A variable declared as local scope can only be accessed in certain blocks of code. 
  * Block Scope
  * Function Scope

Block Scope in JavaScript is code in between two curly brackets {}
  - function block, if block, loop block, etc.

var - variables declared with var are only scoped to function.
let - variables declared with let are scoped to block.
const - variable declared with const are scoped to block. 

The scope let and const are the same. The difference is only reassigning. We can not change or reassign the value of the const variable. I would strongly suggest you to use let and const, by using let and const you will write clean code and avoid hard to debug mistakes. As a rule of thumb, you can use let for any value which change, const for any constant value, and for an array, object, arrow function and function expression.

Object
Everything can be an object and objects do have properties and properties have values so an object is a key value pair. The order of the key is not reserved (there is no order).
Two curly brackets are used to create an object literal.

Getting Values from an Object
You can access values in two ways:
using (.) followed by the key-name if the key-name is one word
using square brackets [] and a quote

A function within an object is known as an object method. 
The 'this' key-word referes to the object itself to access the different values of properties of the object. 
  - The arrow function cannot be used as an object method. The 'this' key-word referes to the window inside an arrow function instead of the object itself. 
See the getFullName function. 
getFullName is the key and the function() is the value

Setting new key for an object
Object is a mutable data structure and can be modified after it is created. 

objectName.newKeyName = 'Value'

Different objects methods can be used to manipulate objects. 
  Object.assign() - is used to copy an object without modifying the original object.

  Object.keys() - is used to get the keys or properties of an object as an array.

  Object.values() - used to get the values of an object as an array.

  Object.entries() - used toget the keys and values in an array.

  hasOwnProperty() - used to check if a specific key or property exist in an object. 

